// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "live_room/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	GetEndpoint   endpoint.Endpoint
	OpenEndpoint  endpoint.Endpoint
	CloseEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.LiveRoomService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CloseEndpoint: MakeCloseEndpoint(s),
		GetEndpoint:   MakeGetEndpoint(s),
		OpenEndpoint:  MakeOpenEndpoint(s),
	}
	for _, m := range mdw["Get"] {
		eps.GetEndpoint = m(eps.GetEndpoint)
	}
	for _, m := range mdw["Open"] {
		eps.OpenEndpoint = m(eps.OpenEndpoint)
	}
	for _, m := range mdw["Close"] {
		eps.CloseEndpoint = m(eps.CloseEndpoint)
	}
	return eps
}
